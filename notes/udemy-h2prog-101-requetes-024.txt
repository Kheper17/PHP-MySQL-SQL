udemy-h2prog-101-requetes-024.txt
UDEMY – H2prog – Mathieu GASTON
----------------------------------------------------
101 requêtes pour maîtriser SQL en moins de 3 heures
	Section 9 Les requêtes de gestion (CRUD)
		24. Gestion des tables
----------------------------------------------------

68. Créer la table "attaque"

	CREATE TABLE attaque (
		idAttaque INT PRIMARY KEY NOT NULL AUTO_INCREMENT, 
		nom VARCHAR(60)
	);

	SHOW TABLES;
	+---------------+
	| Tables_in_rpg |
	+---------------+
	| arme          |
	| attaque       |<--
	| classe        |
	| dispose       |
	| personnage    |
	| typearme      |
	+---------------+

	DESCRIBE attaque;
	+-----------+-------------+------+-----+---------+----------------+
	| Field     | Type        | Null | Key | Default | Extra          |
	+-----------+-------------+------+-----+---------+----------------+
	| idAttaque | int(11)     | NO   | PRI | NULL    | auto_increment |
	| nom       | varchar(60) | YES  |     | NULL    |                |
	+-----------+-------------+------+-----+---------+----------------+


69a. Modifier la table attaque pour ajouter les champs : 
	> baseDegat (INT)
	> Test (TINYINT)

	 ALTER TABLE attaque ADD baseDegat INT, ADD test TINYINT;

	 DESCRIBE attaque;
	+-----------+-------------+------+-----+---------+----------------+
	| Field     | Type        | Null | Key | Default | Extra          |
	+-----------+-------------+------+-----+---------+----------------+
	| idAttaque | int(11)     | NO   | PRI | NULL    | auto_increment |
	| nom       | varchar(60) | YES  |     | NULL    |                |
	| baseDegat | int(11)     | YES  |     | NULL    |                |
	| test      | tinyint(4)  | YES  |     | NULL    |                |
	+-----------+-------------+------+-----+---------+----------------+

69b. Modifier le champ test en le passant en VARCHAR(50)

	ALTER TABLE attaque MODIFY test VARCHAR(50);	

	DESCRIBE attaque;
	+-----------+-------------+------+-----+---------+----------------+
	| Field     | Type        | Null | Key | Default | Extra          |
	+-----------+-------------+------+-----+---------+----------------+
	| idAttaque | int(11)     | NO   | PRI | NULL    | auto_increment |
	| nom       | varchar(60) | YES  |     | NULL    |                |
	| baseDegat | int(11)     | YES  |     | NULL    |                |
	| test      | varchar(50) | YES  |     | NULL    |                |
	+-----------+-------------+------+-----+---------+----------------+

69c. Renommer le champ test en toto

	ALTER TABLE attaque CHANGE test toto INT;

	DESCRIBE attaque;
	+-----------+-------------+------+-----+---------+----------------+
	| Field     | Type        | Null | Key | Default | Extra          |
	+-----------+-------------+------+-----+---------+----------------+
	| idAttaque | int(11)     | NO   | PRI | NULL    | auto_increment |
	| nom       | varchar(60) | YES  |     | NULL    |                |
	| baseDegat | int(11)     | YES  |     | NULL    |                |
	| toto      | int(11)     | YES  |     | NULL    |                |
	+-----------+-------------+------+-----+---------+----------------+

69d. Supprimer le champ toto

	ALTER TABLE attaque DROP toto;

	DESCRIBE attaque;
	+-----------+-------------+------+-----+---------+----------------+
	| Field     | Type        | Null | Key | Default | Extra          |
	+-----------+-------------+------+-----+---------+----------------+
	| idAttaque | int(11)     | NO   | PRI | NULL    | auto_increment |
	| nom       | varchar(60) | YES  |     | NULL    |                |
	| baseDegat | int(11)     | YES  |     | NULL    |                |
	+-----------+-------------+------+-----+---------+----------------+


70. Créer la table "utilise" contenant l'id d'un personnage et l'id d'une attaque, et le level d'une attaque.

	CREATE TABLE utilise (
		idAttaque INT NOT NULL, 
		idPersonnage INT NOT NULL, 
		levelAttaque INT, 
		PRIMARY KEY(idAttaque, idPersonnage), 
		CONSTRAINT FK_ATTAQUE_UTILISE FOREIGN KEY(idAttaque) REFERENCES attaque(idAttaque), 
		CONSTRAINT FK_PERSONNAGE_UTILISE FOREIGN KEY(idPersonnage) REFERENCES personnage(idPersonnage)
	);

	 DESCRIBE utilise;
	+--------------+---------+------+-----+---------+-------+
	| Field        | Type    | Null | Key | Default | Extra |
	+--------------+---------+------+-----+---------+-------+
	| idAttaque    | int(11) | NO   | PRI | NULL    |       |
	| idPersonnage | int(11) | NO   | PRI | NULL    |       |
	| levelAttaque | int(11) | YES  |     | NULL    |       |
	+--------------+---------+------+-----+---------+-------+

